@page "/"
@rendermode InteractiveServer
@using System.Collections.Concurrent
@using RaftLibrary
@inject NodeDataService NodeDataService

@* <div> *@
@*     @foreach (var url in urls) *@
@*     { *@
@*         <div>@url</div> *@
@*     } *@
@* </div> *@

<button @onclick="sendEntry">Send entry</button>


@if(nodeData1 is not null && nodeData2 is not null && nodeData3 is not null)
{

    <div>
        <div>The logs for node 1 are 
            @foreach (RequestAppendEntriesData log in nodeData1.Log)
            {
                <div>@log.Entry</div>
            }
        </div>
        <div>The logs for node 2 are 
            @foreach (RequestAppendEntriesData log in nodeData2.Log)
            {
                <div>@log.Entry</div>
            }
        </div>
        <div>The logs for node 3 are 
            @foreach (RequestAppendEntriesData log in nodeData3.Log)
            {
                <div>@log.Entry</div>
            }
        </div>
    </div>

    <div>
        <div>The state for node 1 is @nodeData1.StateMachineState</div> 
        <div>The state for node 2 is @nodeData2.StateMachineState</div>
        <div>The state for node 3 is @nodeData3.StateMachineState</div>
    </div>

}



@code {
    string[] urls = Environment.GetEnvironmentVariable("NODE_URLS").Split(',');

    NodeData nodeData1;
    NodeData nodeData2;
    NodeData nodeData3;


    protected override async Task OnInitializedAsync()
    {
        nodeData1 = await NodeDataService.GetDataFromApi1();
        nodeData2 = await NodeDataService.GetDataFromApi2();
        nodeData3 = await NodeDataService.GetDataFromApi3();
    }

    async void sendEntry()
    {
        await NodeDataService.SendEntryToApi1(new RequestAppendEntriesData() { Entry="What's up?"});

    }

   



   
}
